import React, { Component } from 'react';
import ReactDOM from 'react-dom';
import { Provider } from 'react-redux';
import { createStore, applyMiddleware } from 'redux';
import { Field, Control, Form, combineForms } from 'react-redux-form';

import thunk from 'redux-thunk';
import logger from 'redux-logger';

const initialUserState = {
  name: ''
};

const store = createStore(combineForms({
  user: initialUserState,
}), applyMiddleware(thunk, logger()));

class UserForm extends Component {
  render() {
    return (
      <Form
        model="user"
        validators={() => ({name: {formValidation: false}})}
        validateOn="submit">
        <Field model=".name" validators={{fieldValidation: (value) => value && value.length}} validateOn="blur">
          {(props) => <div>{JSON.stringify(props.errors)} <input type="text" /></div>}
        </Field>

        <button type="submit">Submit</button>
      </Form>
    );
  }
}

class App extends React.Component {
  render() {
    return (
      <Provider store={store}>
        <UserForm />
      </Provider>
    );
  }
}

ReactDOM.render(<App />, document.getElementById('app'));
